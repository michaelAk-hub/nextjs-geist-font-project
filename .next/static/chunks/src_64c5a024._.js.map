{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 345, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/reservation/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\n\ninterface TableData {\n  id: string;\n  label: string;\n  status: 'available' | 'reserved' | 'selected';\n  x: number;\n  y: number;\n  reservedBy?: string; // Phone number of who reserved it\n}\n\ninterface UserReservation {\n  tableId: string;\n  code: string;\n  phone: string;\n}\n\nexport default function ReservationPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const [phone, setPhone] = useState('');\n  const [reservationCode, setReservationCode] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [selectedTable, setSelectedTable] = useState<string | null>(null);\n  const [userCurrentReservation, setUserCurrentReservation] = useState<UserReservation | null>(null);\n  const [tables, setTables] = useState<TableData[]>([]);\n\n  // Sample table data with reservation tracking\n  const initializeTables = (): TableData[] => [\n    { id: 'T1', label: 'Table 1', status: 'reserved', x: 100, y: 100, reservedBy: '+1234567890' },\n    { id: 'T2', label: 'Table 2', status: 'available', x: 200, y: 100 },\n    { id: 'T3', label: 'Table 3', status: 'reserved', x: 300, y: 100, reservedBy: '+1987654321' },\n    { id: 'T4', label: 'Table 4', status: 'available', x: 100, y: 200 },\n    { id: 'T5', label: 'Table 5', status: 'available', x: 200, y: 200 },\n    { id: 'T6', label: 'Table 6', status: 'available', x: 300, y: 200 },\n    { id: 'T7', label: 'Table 7', status: 'reserved', x: 100, y: 300, reservedBy: '+1122334455' },\n    { id: 'T8', label: 'Table 8', status: 'available', x: 200, y: 300 },\n    { id: 'T9', label: 'Table 9', status: 'reserved', x: 300, y: 300, reservedBy: '+1555000205' },\n    { id: 'T10', label: 'Table 10', status: 'available', x: 400, y: 100 },\n    { id: 'T11', label: 'Table 11', status: 'available', x: 400, y: 200 },\n    { id: 'T12', label: 'Table 12', status: 'available', x: 400, y: 300 },\n  ];\n\n  useEffect(() => {\n    const initialTables = initializeTables();\n    setTables(initialTables);\n    \n    // Check if user is already authenticated\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const response = await fetch('/api/auth/session');\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.session && data.session.role === 'guest') {\n          setIsAuthenticated(true);\n          setPhone(data.session.phone);\n          setReservationCode(data.session.reservationCode || '');\n          \n          // Load user's current reservation and update table states\n          await loadUserReservation(data.session.phone);\n        }\n      }\n    } catch (error) {\n      console.error('Error checking auth status:', error);\n    }\n  };\n\n  const loadUserReservation = async (userPhone: string) => {\n    try {\n      // Check if user already has a reservation\n      const response = await fetch(`/api/reservations/user/${encodeURIComponent(userPhone)}`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success && data.reservation) {\n          const reservation = data.reservation;\n          setUserCurrentReservation(reservation);\n          \n          // Update tables to show user's reserved table as selected (blue)\n          setTables(prev => prev.map(table => {\n            if (table.id === reservation.tableId) {\n              return { ...table, status: 'selected', reservedBy: userPhone };\n            }\n            return table;\n          }));\n          \n          setSelectedTable(reservation.tableId);\n        }\n      }\n    } catch (error) {\n      console.error('Error loading user reservation:', error);\n    }\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          phone: phone.trim(),\n          reservationCode: reservationCode.trim(),\n          type: 'reservation'\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok && data.success) {\n        setIsAuthenticated(true);\n        setError('');\n        \n        // Load user's existing reservation after login\n        await loadUserReservation(phone.trim());\n      } else {\n        setError(data.error || 'Invalid phone number or reservation code');\n      }\n    } catch (error) {\n      setError('Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTableSelect = async (tableId: string) => {\n    const table = tables.find(t => t.id === tableId);\n    if (!table || table.status === 'reserved') {\n      return; // Can't select reserved tables (unless it's user's own)\n    }\n\n    // If user clicks on their own reserved table, do nothing\n    if (table.reservedBy === phone && table.status === 'selected') {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // If user has an existing reservation, update it\n      if (userCurrentReservation) {\n        const response = await fetch('/api/reservations/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            phone: phone,\n            oldTableId: userCurrentReservation.tableId,\n            newTableId: tableId,\n            reservationCode: reservationCode\n          }),\n        });\n\n        if (response.ok) {\n          // Update local state\n          setTables(prev => prev.map(t => {\n            if (t.id === userCurrentReservation.tableId) {\n              // Free the old table\n              return { ...t, status: 'available', reservedBy: undefined };\n            }\n            if (t.id === tableId) {\n              // Reserve the new table\n              return { ...t, status: 'selected', reservedBy: phone };\n            }\n            return t;\n          }));\n\n          setSelectedTable(tableId);\n          setUserCurrentReservation({ ...userCurrentReservation, tableId });\n          \n          alert(`Table changed successfully! Your new table is ${tableId}.`);\n        } else {\n          alert('Failed to change table. Please try again.');\n        }\n      } else {\n        // First time reservation\n        const response = await fetch('/api/reservations/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            phone: phone,\n            tableId: tableId,\n            reservationCode: reservationCode\n          }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          \n          // Update local state\n          setTables(prev => prev.map(t => {\n            if (t.id === tableId) {\n              return { ...t, status: 'selected', reservedBy: phone };\n            }\n            return t;\n          }));\n\n          setSelectedTable(tableId);\n          setUserCurrentReservation({\n            tableId,\n            code: reservationCode,\n            phone: phone\n          });\n          \n          alert(`Table ${tableId} reserved successfully!`);\n        } else {\n          alert('Failed to reserve table. Please try again.');\n        }\n      }\n    } catch (error) {\n      alert('Reservation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancelReservation = async () => {\n    if (!userCurrentReservation) return;\n\n    setLoading(true);\n    try {\n      const response = await fetch('/api/reservations/cancel', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          phone: phone,\n          reservationCode: reservationCode\n        }),\n      });\n\n      if (response.ok) {\n        // Update local state\n        setTables(prev => prev.map(t => {\n          if (t.id === userCurrentReservation.tableId) {\n            return { ...t, status: 'available', reservedBy: undefined };\n          }\n          return t;\n        }));\n\n        setSelectedTable(null);\n        setUserCurrentReservation(null);\n        \n        alert('Reservation cancelled successfully!');\n      } else {\n        alert('Failed to cancel reservation. Please try again.');\n      }\n    } catch (error) {\n      alert('Cancellation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getTableColor = (status: string) => {\n    switch (status) {\n      case 'available': return '#ffffff'; // White\n      case 'reserved': return '#A8A8A8'; // Grey\n      case 'selected': return '#6AD7FF'; // Light blue\n      default: return '#ffffff';\n    }\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl font-bold\">Make a Reservation</CardTitle>\n            <CardDescription>\n              Enter your phone number and reservation code to access the seating chart\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleLogin} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  id=\"phone\"\n                  type=\"text\"\n                  placeholder=\"+1234567890\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  required\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"code\">Reservation Code</Label>\n                <Input\n                  id=\"code\"\n                  type=\"text\"\n                  placeholder=\"ABC12\"\n                  value={reservationCode}\n                  onChange={(e) => setReservationCode(e.target.value.toUpperCase())}\n                  maxLength={5}\n                  required\n                />\n              </div>\n\n              {error && (\n                <Alert className=\"border-red-200 bg-red-50\">\n                  <AlertDescription className=\"text-red-800\">\n                    {error}\n                  </AlertDescription>\n                </Alert>\n              )}\n\n              <Button \n                type=\"submit\" \n                className=\"w-full\" \n                disabled={loading}\n              >\n                {loading ? 'Logging in...' : 'Access Reservation'}\n              </Button>\n            </form>\n\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n              <h3 className=\"font-semibold text-blue-900 mb-2\">Test Credentials:</h3>\n              <div className=\"text-sm text-blue-800 space-y-1\">\n                <p><strong>Phone:</strong> +1234567890 <strong>Code:</strong> ABC12</p>\n                <p><strong>Phone:</strong> +1987654321 <strong>Code:</strong> DEF34</p>\n                <p><strong>Phone:</strong> +1122334455 <strong>Code:</strong> GHI56</p>\n                <p><strong>Phone:</strong> +1555000205 <strong>Code:</strong> L6WPC</p>\n                <p><strong>Phone:</strong> +1555000833 <strong>Code:</strong> 86SRE</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-4\">\n      <div className=\"max-w-6xl mx-auto\">\n        <div className=\"mb-6 flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold\">Table Reservation</h1>\n            <p className=\"text-gray-600\">\n              {userCurrentReservation \n                ? `Your current reservation: Table ${userCurrentReservation.tableId}` \n                : 'Select an available table for your reservation'\n              }\n            </p>\n          </div>\n          <Button \n            variant=\"outline\" \n            onClick={() => {\n              setIsAuthenticated(false);\n              setPhone('');\n              setReservationCode('');\n              setUserCurrentReservation(null);\n              setSelectedTable(null);\n            }}\n          >\n            Logout\n          </Button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Seating Chart */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Seating Chart</CardTitle>\n                <CardDescription>\n                  {userCurrentReservation \n                    ? 'Your reserved table is shown in blue. Click another table to change your reservation.'\n                    : 'Click on an available table to make your reservation'\n                  }\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"relative bg-gray-100 rounded-lg p-4\" style={{ height: '400px' }}>\n                  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 500 400\">\n                    {tables.map((table) => (\n                      <g key={table.id}>\n                        <rect\n                          x={table.x - 25}\n                          y={table.y - 25}\n                          width=\"50\"\n                          height=\"50\"\n                          fill={getTableColor(table.status)}\n                          stroke=\"#333\"\n                          strokeWidth=\"2\"\n                          rx=\"5\"\n                          className={`cursor-pointer transition-all ${\n                            table.status === 'reserved' && table.reservedBy !== phone \n                              ? 'cursor-not-allowed' \n                              : 'hover:opacity-80'\n                          }`}\n                          onClick={() => handleTableSelect(table.id)}\n                        />\n                        {table.status === 'reserved' && table.reservedBy !== phone && (\n                          <text\n                            x={table.x}\n                            y={table.y + 5}\n                            textAnchor=\"middle\"\n                            fontSize=\"20\"\n                            fill=\"#666\"\n                            className=\"pointer-events-none\"\n                          >\n                            ✕\n                          </text>\n                        )}\n                        <text\n                          x={table.x}\n                          y={table.y + 40}\n                          textAnchor=\"middle\"\n                          fontSize=\"12\"\n                          fill=\"#333\"\n                          className=\"pointer-events-none\"\n                        >\n                          {table.label}\n                        </text>\n                      </g>\n                    ))}\n                  </svg>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Legend and Actions */}\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Legend</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-4 h-4 bg-white border-2 border-gray-300 rounded\"></div>\n                  <span className=\"text-sm\">Available</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-4 h-4 bg-gray-400 border-2 border-gray-300 rounded\"></div>\n                  <span className=\"text-sm\">Reserved by Others</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-4 h-4 bg-blue-300 border-2 border-gray-300 rounded\"></div>\n                  <span className=\"text-sm\">Your Reservation</span>\n                </div>\n              </CardContent>\n            </Card>\n\n            {userCurrentReservation && (\n              <Card>\n                <CardHeader>\n                  <CardTitle>Your Reservation</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <p className=\"text-lg font-semibold\">Table {userCurrentReservation.tableId}</p>\n                    <p className=\"text-sm text-gray-600\">\n                      Reservation Code: {userCurrentReservation.code}\n                    </p>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm text-gray-600\">\n                      • Click another available table to change your reservation\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      • You can only have one table reserved at a time\n                    </p>\n                  </div>\n                  \n                  <Button \n                    onClick={handleCancelReservation}\n                    variant=\"destructive\"\n                    className=\"w-full\"\n                    disabled={loading}\n                  >\n                    {loading ? 'Cancelling...' : 'Cancel Reservation'}\n                  </Button>\n                </CardContent>\n              </Card>\n            )}\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Instructions</CardTitle>\n              </CardHeader>\n              <CardContent className=\"text-sm text-gray-600 space-y-2\">\n                <p>• White tables are available for reservation</p>\n                <p>• Grey tables with ✕ are reserved by other guests</p>\n                <p>• Blue tables show your current reservation</p>\n                <p>• You can only reserve one table at a time</p>\n                <p>• Click another table to change your reservation</p>\n                <p>• Use \"Cancel Reservation\" to free your table</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}